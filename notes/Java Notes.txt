What is Java?
================
Java is a programming language that allows developers to write code that can run on different platforms and devices. It is used to create a wide range of applications, from web and mobile apps to desktop and enterprise applications. Java is known for its security features and is a popular choice for building secure and scalable applications. In simpler terms, Java is a language that developers use to create software that can run on different devices and platforms.

There are three main types of Java platforms:
====================================================

Java SE (Standard Edition): Java SE is the standard Java platform that provides the core functionality for developing and running Java applications. It includes the Java Development Kit (JDK), which provides the tools needed to develop Java applications, and the Java Runtime Environment (JRE), which is required to run Java applications.
		CUI : character user interface
		GUI : graphical user interface
				AWT
				SWINGS
				JavaFX

Java EE (Enterprise Edition): Java EE is a platform for building enterprise applications, such as large-scale web and mobile applications. It includes a set of standardized APIs and technologies for building scalable, secure, and robust applications, such as Servlets, JSP, EJB, JMS, JPA, and more.

Java ME (Micro Edition): Java ME is a platform for building mobile and embedded applications, such as those used in smart devices and IoT applications. It includes a subset of the Java SE APIs optimized for small devices with limited resources.

Overall, these three Java platforms are designed to provide developers with the tools and technologies needed to build a wide range of applications, from small mobile apps to large-scale enterprise applications.


Advantages
============
Java is a popular programming language used by developers for a wide range of applications, from web development to mobile app development and more. Some of the key advantages of Java include:

Platform independence: Java code can run on any platform that has a Java Virtual Machine (JVM) installed, making it highly portable and platform independent.

Object-oriented programming: Java is an object-oriented programming language, which means that it is based on the concepts of objects and classes. This makes it easier to write modular and reusable code.

Garbage collection: Java has a built-in garbage collector that automatically manages memory, freeing up memory that is no longer needed and preventing common memory-related errors like segmentation faults.

Large community and libraries: Java has a large and active developer community, with many open-source libraries and frameworks available for use. This makes it easier to find solutions to common programming problems and accelerates development.

Security: Java has a strong focus on security, with built-in features like sandboxing and cryptography. This makes it a popular choice for building secure applications.

Rich APIs: Java provides a rich set of APIs for a wide range of tasks, including networking, database access, and user interface development.

Overall, Java is a versatile and powerful programming language with many advantages that make it a popular choice for developers.




Where java can be used?
=============================
Java is a versatile programming language that can be used for a wide range of applications. Here are some common use cases for Java:

Web Development: Java is commonly used for web development, with popular frameworks like Spring and Struts available for building web applications.

Mobile App Development: Java is used for developing Android mobile applications, with the Android SDK providing a set of tools for developing and testing Android apps.

Desktop Applications: Java can also be used for building desktop applications, with the JavaFX framework providing a set of tools for creating graphical user interfaces.

Enterprise Applications: Java is often used for building large-scale enterprise applications, with frameworks like Java EE providing a set of tools for building scalable and robust applications.

Big Data: Java is commonly used for big data processing, with tools like Hadoop and Spark available for processing large volumes of data.

Internet of Things (IoT): Java is also used for developing IoT applications, with tools like the Eclipse IoT platform providing a set of tools for building IoT applications.

Overall, Java is a versatile language that can be used for a wide range of applications, making it a popular choice among developers.


  JRE - JDK - JVM
  ======================
  JRE : java runtime environment
  JDK : java development kit
  JVM : Java virtuval machine



Naming convensions
====================
Class names: Class names should be nouns, written in camel case, with the first letter of each word capitalized. For example, MyClass, AccountManager, or CustomerOrder.

Method names: Method names should be verbs, written in camel case, with the first letter of the first word in lowercase. For example, calculateTotal(), saveData(), or printReport().

Variable names: Variable names should be written in camel case, starting with a lowercase letter. For example, firstName, lastName, or orderNumber.

Constant names: Constants are variables that are declared with the 'final' keyword, which means their value cannot be changed. Constant names should be in all uppercase letters, with words separated by underscores. For example, MAX_VALUE, MIN_VALUE, or DEFAULT_TIMEOUT.

Package names: Package names should be all lowercase letters and should be in reverse domain name format, e.g. com.example.mypackage. This helps to prevent naming conflicts between different projects or developers.

Acronyms: Acronyms should be treated as words and written in camel case, with the first letter of each word capitalized. For example, HTTPReader, not HttpReader.

Underscores: Underscores should generally be avoided in names, except for constants. For example, myVariable, not my_variable.

Meaningful names: Use meaningful names that describe the purpose or function of the element. This makes the code more readable and easier to understand for other developers who may be working on the project.

By following these Java naming conventions, your code will be more consistent, readable, and maintainable, making it easier to collaborate with other developers and work on larger projects.